on: [push, pull_request]
name: R-CMD-check-relative

jobs:
  R-CMD-check-relative:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'oldrel'}
          - {os: windows-latest, r: 'release'}
          - {os: windows-latest, r: 'devel'}
          - {os: macOS-latest, r: 'oldrel'}
          - {os: macOS-latest, r: 'release'}
          - {os: macOS-latest, r: 'devel'}
          - {os: ubuntu-16.04, r: 'oldrel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
      - uses: r-lib/actions/setup-pandoc@master
      - uses: s-weigand/setup-conda@v1

      - name: Session info
        run: version
        shell: Rscript {0}

      - name: Query dependencies
        run: |
          install.packages('remotes')
          remotes::install_github("Dschaykib/newsmd")
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Session info
        run: version
        shell: Rscript {0}

      #- name: Cache R packages
      #  if: runner.os != 'Windows'
      #  uses: actions/cache@v1
      #  with:
      #    path: ${{ env.R_LIBS_USER }}
      #    key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
      #    restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "16.04"), sep = "\n")')


      - name: Session info
        run: version
        shell: Rscript {0}

      - name: Install dependencies
        if: runner.os != 'Windows'
        run: remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Session info
        run: version
        shell: Rscript {0}

      # newer source versions are available for some packages,
      # but compilation fails on Windows machines (RTools is missing).
      # therefore, force installation of binaries for *all* packages on Windows.
      - name: Install only binaries on Windows (RTools missing)
        if: runner.os == 'Windows'
        run: remotes::install_deps(dependencies = TRUE, type = 'binary')
        shell: Rscript {0}

      - name: Session info
        run: version
        shell: Rscript {0}

      #- name: Fix igraph source installation in ubuntu
      #  if: (runner.os == 'Linux')
      #  run: |
      #    Rscript -e "remove.packages(c('igraph'))"
      #    conda install -c r r-igraph

      - name: Session info
        run: version
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: FALSE
        run: rcmdcheck::rcmdcheck(args = c("--as-cran", "--no-manual", "--no-build-vignettes"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check