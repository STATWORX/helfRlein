on: [push, pull_request]
name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:

          - {os: ubuntu-latest, r: 'oldrel', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-latest, r: 'release', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}

          # remove ubuntu with devel R, see here why:
          # https://github.com/r-lib/actions/issues/49
          #- {os: ubuntu-latest, r: 'devel', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
      - uses: r-lib/actions/setup-pandoc@master
      - uses: s-weigand/setup-conda@v1


      - name: Query dependencies
        run: |
          install.packages('remotes')
          remotes::install_github("Dschaykib/newsmd")
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
      - name: Install dependencies
        run: |
          remotes::install_github("Dschaykib/newsmd")
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          remove.packages("stringi")
        shell: Rscript {0}

        # newer source versions are available for rlang and pillar,
        # but compilation fails on Windows-oldrel (RTools is missing).
        # therefore, force installation of binaries for these packages.
      - name: Fix Windows-oldrel build fail (RTools missing)
        if: runner.os == 'Windows' && matrix.config.r == 'oldrel'
        run: install.packages(c('rlang', 'pillar'), type = 'binary')
        shell: Rscript {0}

      - name: Fix stringi source installation in ubuntu-oldrel
        if: runner.os == 'Linux' && matrix.config.r == 'oldrel'
        run: conda install -c r r-stringi

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--no-build-vignettes"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check